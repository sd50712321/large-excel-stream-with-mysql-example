script.
    let dataTable
    const columns = [
            {
                targets: 0,
                data: "camp_admin_idx",
                className: 'text-center',
                searchable: false,
                orderable: false,
                render: function (data, type, full, meta) {
                    return '<input type="checkbox" id="check_' + data + '" class="check" name="check" value="' + data + '">'
                },
                width: "5%"
            },
            //- {"data":null},
            {
                "data":"camp_admin_id",
                searchable: false,
                orderable: false,
                render: function (data, type, full, meta) {
                    return `<a href="/home/view?camp_admin_idx=${full.camp_admin_idx}">${data}</a>`;
                },
            },
            {
                "data":"repr_name",
                searchable: false,
                orderable: false,
            },
            {
                "data":"biz_name",
                searchable: false,
                orderable: false,
            },
            {
                "data":"biz_num",
                searchable: false,
                orderable: false,
            },
            {
                "data":"repr_email",
                searchable: false,
                orderable: false,
            },
            {
                "data":"repr_num",
                searchable: false,
                orderable: false,
            },
            {
                "data":"stlmt_bank",
                searchable: false,
                orderable: false,
            },
            {
                "data":"acc_num",
                searchable: false,
                orderable: false,
            },
            {
                "data":"acc_name",
                searchable: false,
                orderable: false,
            },
            {
                "data":"first_create_dt",
                searchable: false,
                orderable: false,
            },
            {
                "data":"auth_or_not",
                searchable: false,
                orderable: false,
                render: function (data, type, full, meta) {
                    if(full.auth_code !=="10010"){
                        if(data==="Y")
                            return '입점완료'
                        else
                            return '입점대기'
                    }else{
                        return ''
                    }
                },
            },
            {
                "data":"auth_or_not",
                searchable: false,
                orderable: false,
                render: function (data, type, full, meta) {
                    if(full.auth_code !=="10010"){
                        if(full.auth_or_not==="Y")
                            return `<button type="button" class="btn btn-danger" value="${full.camp_admin_idx}" onClick="withdrawAck">승인철회</button>`
                        else
                            return `<button type="button" class="btn btn-primary" value="${full.camp_admin_idx}" onClick="withdrawAck">승인하기</button>`
                    }else{
                        return ''
                    }
                },  
            },
        ]

    $(document).ready(function(){

        dataTable = $('#dataTable').DataTable({
            "processing":true,
            "serverSide":true,
            "searching": true,
            "autoWidth": false,
            "info": true,
            "paging":true,
            //- scrollX: true,
            //- scrollCollapse: true,
            //- paging: false ,
            //- fixedColumns: {
            //- leftColumns: 2
            //- // heightMatch: 'auto' // did not help with alignment issue
            //- },
            "lengthMenu": [ [ 10, 20, 50 ], [ 10, 20, 50 ] ],
            "ajax":{
                "url":"/home/list/json",
                "type":"POST",
                "contentType":"application/json",
                "data": function(d){
                    return JSON.stringify({"returnObj":d})
                }
            },
            "columns":columns,
            "language": {
                "emptyTable": "데이터가 존재하지 않습니다",
                "loadingRecords": "로딩 중 입니다",
                "processing": "잠시만 기다려 주세요",
                "lengthMenu": "페이지당 _MENU_ 개씩 보기",
                "info": "총 _TOTAL_개의 글",
                "infoEmpty" : "총 0개의 글",
                "infoFiltered": "(_MAX_개의 글 중)",
                "zeroRecords": "조회된 데이터가 없습니다",
                "paginate": {
                    "first": "첫 페이지",
                    "last": "마지막 페이지",
                    "next": "다음",
                    "previous": "이전"
                }
            }
        })
    })

    // 조회 기능
    $('#searchBtn').click(function (ev) {
        const select_info = $('input[name="select_info"]').val();
        //- dataTable.columns().search('').draw();
        
        const select_filter = $('select[name="select_filter"]').val();
        const auth_or_not = $('input[name="auth_or_not"]:checked').val()
        console.log('select_filter',select_filter)
        console.log('category',auth_or_not)

        if (select_filter !== "all") {
            dataTable.column(1).search('')
            dataTable.column(2).search('')
            dataTable.column(3).search('')
            dataTable.column(6).search('')
            dataTable.column(select_filter).search(select_info)
        }
        if (auth_or_not !== "all" && auth_or_not!==undefined) {
            dataTable.column(11).search(auth_or_not)
        }else{
            dataTable.column(11).search('')
        }

        dataTable.draw()

        //- if (status != '전체') {
        //-     if (dataTable.column(6).search() != status) {
        //-         dataTable.column(6).search(status).draw();
        //-     }
        //- }

        ev.preventDefault();
    })

    $('tr[name="table-row"]').on('click',function(e){
        console.log($(this).data("camp_idx"))
    })

    $(document).on('click','button[name="confirmBtn"]',async function(){
        console.log($(this).val())
        
        await utilPutDataByAPI(`/camp/acknw/${$(this).val()}`,null,function(res){
            console.log('response',res)
            if(res.result === true){
                Toast.fire({ icon: 'success', title: '승인되었습니다'}).then(()=>{window.location.assign('/camp/list')})
            }else{
                Toast.fire({ icon: 'error', title: '승인 중 오류가 발생했습니다'})
            }
        })
    })

    //운영중단설정모달
    $('#resvPausedBtn').on('click', function(ev) {
        const idxList = []
        const checkedIdx = $('input[name="check"]:checked')
        let camp_idx
        let camp_name
        $.each(checkedIdx,function(index,item){
            console.log('item',item.value)
            idxList.push(item.value)
            camp_idx = item.value
            camp_name = $('#check_'+item.value).parent().parent().find('a')[0].innerText
        })
        

        if(idxList.length==0)
            return Toast.fire({ icon: 'error', title: '캠핑장을 선택해 주세요'})

        if(idxList.length>1)
            return Toast.fire({ icon: 'error', title: '하나의 캠핑장만 선택해 주세요'})
        $('#sel_camp_name').val(camp_name)
        $('#paused_camp_idx').val(camp_idx)
        $('#addPauseDt').modal();
    });    

    //운영중단설정
    $('#addPauseButton').on('click',async function(ev) {
        if (!$('#resv_poss_calendar').val()) {
            return Toast.fire({ icon: 'error', title: '중단일시를 선택해주세요'})
        }   
        const camp_idx = $('#paused_camp_idx').val()
        const pause_dt = $('#resv_poss_calendar').val()

        const resvPausedObj = {
            camp_idx,
            manage_state:"N",
            pause_dt
        }

        await utilPatchDataByAPI('/camp/pause_dt',resvPausedObj,function(res){
            console.log('res',res)
            if(res.result===true){
                Toast.fire({ icon: 'success', title: '수정되었습니다'}).then(()=>{window.location.assign('/camp/list')})
            }
            else{
                Toast.fire({ icon: 'error', title: '수정 중 오류가 발생했습니다'})
            }
        })
    });

    //예약가능설정
    $('#resvPossBtn').on('click',async function(ev) {
        const camp_idx_arr = []
        const checkedIdx = $('input[name="check"]:checked')
        let camp_idx
        $.each(checkedIdx,function(index,item){
            console.log('item',item.value)
            camp_idx_arr.push(item.value)
            camp_idx = item.value
        })

        if(camp_idx_arr.length==0)
            return Toast.fire({ icon: 'error', title: '캠핑장을 선택해 주세요'})

        console.log('camp_idx_arr',camp_idx_arr)
        await utilPatchDataByAPI('/camp/resv_poss',{camp_idx_arr},function(res){
            console.log('res',res)
            if(res.result===true){
                Toast.fire({ icon: 'success', title: '수정되었습니다'}).then(()=>{window.location.assign('/camp/list')})
            }
            else{
                Toast.fire({ icon: 'error', title: '수정 중 오류가 발생했습니다'})
            }
        })
    });
    