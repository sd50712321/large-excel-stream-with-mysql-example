script.
    //숫자만입력
    $('#phone, #mobile, input[name="selected_refund"], input[name="selected_refund_value"]').on('keyup change', function(e) {
        let newVal = $(this).val().replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        $(this).val(newVal)
    }); 
        
 
    $('#addCampImgBtn').on('click', function(ev) {        
        $('input[name="repr_img"]').click();
    });
    $('#addCampMapBtn').on('click', function(ev) {        
        $('input[name="loc_img"]').click();
    });
    $('input[name="repr_img"]').on('change', function(ev) {
        let { files } = ev.target;        
        utilGetPreviewImg(files, 'campImgPreview');
    })
    $('input[name="loc_img"]').on('change', function(ev) {
        let { files } = ev.target;        
        utilGetPreviewImg(files, 'campMapPreview');
    })
    $('#changePwdBtn').on('click',function(e){
        console.log(1)
        $('#changePwdModal').modal();
    })

    //validate test
    
    //- 캠핑장 등록
    $('#registCampBtn').on('click', async function(ev) {    
        const validateChk = null_validation('camp-regist-form')

        if(validateChk === true){

            for(let i = 0 ; i<6 ; i++){
                const category = $(`#category-${i}`)
                const categoryChecked = category.find('input[name="category"]:checked')
                console.log('category',category)
                console.log('categoryLength',categoryChecked.length)
                if(categoryChecked.length === 0)
                    return Toast.fire({ icon: 'error', title: `${category.data('empty')}을(를) 적어도 하나 선택해주세요`})
            }

            const formData = new FormData($('#camp-regist-form')[0])
            formData.delete('time-range-picker')
            formData.delete('month-day-range-picker')
            formData.delete('single-time-picker')
            formData.delete('selected_refund')
            formData.delete('selected_refund_value')
            formData.delete('single-time-picker')

            const selected_category = formData.getAll('category').join(',')
            formData.delete('category')
            formData.set('selected_category',selected_category)


            const chkin_auto_time = $('#chkin_auto_time').val()
            const chkout_auto_time = $('#chkout_auto_time').val()
            formData.set("chkin_auto_time",chkin_auto_time)
            formData.set("chkout_auto_time",chkout_auto_time)

            const peak_term = $('#peak_term').val().split(' - ')
            const peak_term_start = peak_term[0]
            formData.set("peak_term_start",peak_term_start)
            const peak_term_end = peak_term[1]
            formData.set("peak_term_end",peak_term_end)

            const cs_manage_time_start = $('#cs_manage_time_start').val()
            formData.set("cs_manage_time_start",cs_manage_time_start)
            const cs_manage_time_end = $('#cs_manage_time_end').val()
            formData.set("cs_manage_time_end",cs_manage_time_end)

            if($("#elec_pymt_or_not").is(":checked"))
                formData.set("elec_pymt_or_not","Y")
            else
                formData.set("elec_pymt_or_not","N")
                
            if($("#no_pbook_or_not").is(":checked"))
                formData.set("no_pbook_or_not","Y")
            else
                formData.set("no_pbook_or_not","N")

            const selected_refund = []
            const inputSelectedRefund = $('input[name="selected_refund"]')
            const inputSelectedRate = $('input[name="selected_refund_value"]')

            $.each(inputSelectedRefund,function(index,item){
                //- console.log('index',index)
                const tempObject = {
                    "peak_or_not":$(item).data('peak'),
                    "weekend_or_not":$(item).data('weekend'),
                    "standard_dt":$(item).val(),
                    "rfd_rate":inputSelectedRate[index].value
                }
                selected_refund.push(tempObject)
            })
            formData.set('selected_refund',JSON.stringify(selected_refund))
            if(zonelist.length!==0){
                formData.set('zone_info',JSON.stringify(zonelist))
            }

            await utilPostDataWithFilesByAPI('/camp', formData, function(res) {
                console.log(res)
                if(res.result===true){
                    Toast.fire({ icon: 'success', title: '등록 되었습니다'}).then(()=>{window.location.assign('/camp/list')})
                }else{
                    Toast.fire({ icon: 'error', title: '등록 중 오류가 발생했습니다'})
                }
            });
        }
    })

    //캠핑장 수정
    $('#updateCampBtn').on('click', async function(ev) {    
        const validateChk = null_validation('camp-regist-form')

        if(validateChk === true){
            
            for(let i = 0 ; i<6 ; i++){
                const category = $(`#category-${i}`)
                const categoryChecked = category.find('input[name="category"]:checked')
                console.log('category',category)
                console.log('categoryLength',categoryChecked.length)
                if(categoryChecked.length === 0)
                    return Toast.fire({ icon: 'error', title: `${category.data('empty')}을(를) 적어도 하나 선택해주세요`})
            }

            const formData = new FormData($('#camp-regist-form')[0])
            formData.delete('time-range-picker')
            formData.delete('month-day-range-picker')
            formData.delete('single-time-picker')
            formData.delete('selected_refund')
            formData.delete('selected_refund_value')
            formData.delete('single-time-picker')

            const selected_category = formData.getAll('category').join(',')
            formData.delete('category')
            formData.set('selected_category',selected_category)


            const chkin_auto_time = $('#chkin_auto_time').val()
            const chkout_auto_time = $('#chkout_auto_time').val()
            formData.set("chkin_auto_time",chkin_auto_time)
            formData.set("chkout_auto_time",chkout_auto_time)

            const peak_term = $('#peak_term').val().split(' - ')
            const peak_term_start = peak_term[0]
            formData.set("peak_term_start",peak_term_start)
            const peak_term_end = peak_term[1]
            formData.set("peak_term_end",peak_term_end)

            const cs_manage_time_start = $('#cs_manage_time_start').val()
            formData.set("cs_manage_time_start",cs_manage_time_start)
            const cs_manage_time_end = $('#cs_manage_time_end').val()
            formData.set("cs_manage_time_end",cs_manage_time_end)

            if($("#elec_pymt_or_not").is(":checked"))
                formData.set("elec_pymt_or_not","Y")
            else
                formData.set("elec_pymt_or_not","N")
                
            if($("#no_pbook_or_not").is(":checked"))
                formData.set("no_pbook_or_not","Y")
            else
                formData.set("no_pbook_or_not","N")

            const selected_refund = []
            const inputSelectedRefund = $('input[name="selected_refund"]')
            const inputSelectedRate = $('input[name="selected_refund_value"]')

            $.each(inputSelectedRefund,function(index,item){
                //- console.log('index',index)
                const tempObject = {
                    "peak_or_not":$(item).data('peak'),
                    "weekend_or_not":$(item).data('weekend'),
                    "standard_dt":$(item).val(),
                    "rfd_rate":inputSelectedRate[index].value
                }
                selected_refund.push(tempObject)
            })
            formData.set('selected_refund',JSON.stringify(selected_refund))
            if(zonelist.length!==0){
                formData.set('zone_info',JSON.stringify(zonelist))
            }

            const camp_idx = $('#campIdx').val()
            await utilPutDataWithFilesByAPI(`/camp/${camp_idx}`, formData, function(res) {
                console.log(res)
                if(res.result===true){
                    Toast.fire({ icon: 'success', title: '수정 되었습니다'}).then(()=>{window.location.assign('/camp/list')})
                }else{
                    Toast.fire({ icon: 'error', title: '수정 중 오류가 발생했습니다'})
                }
            });
        }
    })

    //캠핑장 삭제
    $('#deleteCampBtn').on('click',async function(ev) {
        const camp_idx = $('#campIdx').val()
        if(camp_idx){
            if(confirm("삭제 하시겠습니까?")){
                await utilDeleteDataByAPI(`/camp`, camp_idx, function(res) {
                    console.log(res)
                    if(res.result===true){
                        Toast.fire({ icon: 'success', title: '삭제 되었습니다'}).then(()=>{window.location.assign('/camp/list')})
                    }else{
                        Toast.fire({ icon: 'error', title: '삭제 중 오류가 발생했습니다'})
                    }
                });
            }
        }
    });